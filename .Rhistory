export_excel(paid, "Paid", "outputs/Camera Violations 2022-07-02.xlsx", "existing")
#.libPaths("C:/Users/sara.brumfield2/Documents/r_library")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
data <- import("L:/BBMR_CSV_FILE_20220802.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(issued)
View(paid)
View(violations)
max(violations$`VIOL DATE`)
violations_FY22 <- violations %>% filter(`Year-Month` < "2022-07")
max(violations_FY22$`VIOL DATE`)
export_excel(issued, "Issued", "outputs/Camera Violations 2022-07-02.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-07-02.xlsx", "existing")
##====
tag <- violations %>%
count(STATUS, TAG, `VIOL CODE`, `VIOL MONTH`)
issued_fy22 <- violations_FY22 %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid_fy22 <- violations_FY22 %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
issued_fy22 <- violations_FY22 %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid_fy22 <- violations_FY22 %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(paid_fy22)
View(issued_fy22)
sum(paid$`2022-06`)
sum(paid$`2022-06`, na.rm = TRUE)
sum(paid_fy22$`2022-06`, na.rm = TRUE)
export_excel(issued_fy22, "Issued 06302022", "outputs/Camera Violations 2022-06-30.xlsx", "new")
export_excel(paid_fy22, "Paid 06302022", "outputs/Camera Violations 2022-06-30.xlsx", "existing")
export_excel(issued, "Issued", "outputs/Camera Violations 2022-08-02.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-08-02.xlsx", "existing")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
data <- import("L:/BBMR_CSV_FILE_20220902.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued, "Issued", "outputs/Camera Violations 2022-09-02.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-09-02.xlsx", "existing")
violations_FY22 <- violations %>% filter(`Year-Month` < "2022-07")
issued_fy22 <- violations_FY22 %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid_fy22 <- violations_FY22 %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued_fy22, "Issued 06302022", "outputs/Camera Violations 2022-06-30.xlsx", "new")
export_excel(paid_fy22, "Paid 06302022", "outputs/Camera Violations 2022-06-30.xlsx", "existing")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(dplyr)
library(lubridate)
library(rio)
library(readxl)
library(magrittr)
library(assertthat)
library(stringr)
library(openxlsx)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
source("G:/Analyst Folders/Sara Brumfield/exp_projection_year/projections/expProjections/R/1_apply_excel_formulas.R")
source("G:/Analyst Folders/Sara Brumfield/exp_projection_year/projections/expProjections/R/1_write_excel_formulas.R")
#.libPaths("C:/Users/sara.brumfield2/Documents/r_library")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
data <- import("L:/BBMR_CSV_FILE_20221004.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued, "Issued", "outputs/Camera Violations 2022-10-04.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-10-04.xlsx", "existing")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
rm(list = c("combine_agencies", "connect_fs_api", "create_analyst_dirs", "export_excel", "extract_fs_submissions", "get_fs_submissions", "get_fy", "get_last_mod", "match_name_to_id", "query_db", "rename_cols"))
data <- import("L:/BBMR_CSV_FILE_20221102.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued, "Issued", "outputs/Camera Violations 2022-10-04.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-10-04.xlsx", "existing")
Sys.Date()
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
#.libPaths("C:/Users/sara.brumfield2/Documents/r_library")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
data <- import("L:/BBMR_CSV_FILE_20221202.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
file_path = "G:/BBMR - Revenue Team/2. Revenue Accounts/A001 - General Fund/191-193 - Speed - Red-Light Violations"
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
data <- import("L:/BBMR_CSV_FILE_20221202.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
tags <- violations %>%
filter(Status != "Paid in full" | Status != "Balance abated (paid)") %>%
group_by(TAG, Type, Year-Month) %>%
summarise(count = n(CITATION))
tags <- violations %>%
filter(Status != "Paid in full" | Status != "Balance abated (paid)") %>%
group_by(TAG, Type, `Year-Month`) %>%
summarise(count = n(CITATION))
unpaid <- violations %>%
filter(Status != "Paid in full" | Status != "Balance abated (paid)") %>%
select(TAG, Type, `VIOL DATE`, Status)
unique(unpaid$Status)
unpaid <- violations %>%
filter(Status != "Paid in full" & Status != "Balance abated (paid)") %>%
select(TAG, Type, `VIOL DATE`, Status)
unique(unpaid$Status)
unpaid <- violations %>%
filter(Status != "Paid in full" & Status != "Balance abated (paid)") %>%
select(TAG, Type, `VIOL DATE`, Status) %>%
arrange(TAG)
View(unpaid)
#.libPaths("C:/Users/sara.brumfield2/Documents/r_library")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
# .libPaths("G:/Data/r_library")
# library(bbmR)
#load("Data/Camera Violations 2022-05-03.Rdata")
#This is how you normally input data
data <- import("L:/BBMR_CSV_FILE_20230104.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
unpaid <- violations %>%
filter(Status != "Paid in full" & Status != "Balance abated (paid)") %>%
select(TAG, Type, `VIOL DATE`, Status) %>%
arrange(TAG)
file_path = "G:/BBMR - Revenue Team/2. Revenue Accounts/A001 - General Fund/191-193 - Speed - Red-Light Violations"
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(unpaid, "Unpaid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
View(unpaid)
unpaid <- violations %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)") & max(Year) > 2019) %>%
arrange(TAG)
View(unpaid)
unpaid <- violations %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)") & Year %in% c("2023", "2022", "2021", "2020")) %>%
arrange(TAG)
View(unpaid)
unpaid <- violations %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
group_by(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
summarise(count = n())
View(unpaid)
lost <- violations %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)")) %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
group_by(TAG, Type, Status, Year) %>%
summarise(count = n())
View(lost)
lost <- violations %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)")) %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
mutate(Year = year(Year))
lost <- violations %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)")) %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
mutate(Year = as.numeric(Year))
View(lost)
lost <- violations %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)")) %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
mutate(Year = as.numeric(Year)) %>%
group_by(TAG, Year) %>%
summarise(count = n(),
max = max(Year))
View(lost)
lost <- violations %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)")) %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
mutate(Year = as.numeric(Year)) %>%
group_by(TAG) %>%
summarise(count = n(),
max = max(Year))
View(lost)
lost <- violations %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)")) %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
mutate(Year = as.numeric(Year)) %>%
group_by(TAG) %>%
summarise(count = n(),
max = max(Year)) %>%
filter(max >= 2020)
View(lost)
lost <- violations %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)")) %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
mutate(Year = as.numeric(Year)) %>%
group_by(TAG) %>%
summarise(count = n(),
max = max(Year)) %>%
filter(max <= 2019) %>%
ungroup()
View(lost)
test <- lost %>% left_join(violations, by = c("CITATION")) %>%
arrange(TAG)
test <- lost %>% left_join(violations, by = c("TAG")) %>%
arrange(TAG)
View(test)
View(lost)
unpaid <- violations %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
filter(Status != "Paid in full" & Status != "Balance abated (paid)") %>%
arrange(TAG)
test <- lost %>% left_join(unpaid, by = c("TAG")) %>%
arrange(TAG)
View(test)
lost_rev <- lost %>% left_join(unpaid, by = c("TAG")) %>%
select(-TAG, -count, -max)
arrange(TAG)
lost_rev <- lost %>% left_join(unpaid, by = c("TAG")) %>%
select(-count, -max) %>%
relocate(TAG, .after = CITATION) %>%
arrange(TAG)
View(lost_rev)
lost_tags <- lost$TAG
test <- unpaid %>%
filter(!(TAG %in% lost_tags))
lost_tags
lost_tags[[1]]
View(unpaid)
View(test)
unpaid <- unpaid %>%
filter(!(TAG %in% lost_tags))
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(unpaid, "Unpaid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(lost_rev, "Lost Revenue", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
