select(`Year-Month`, `CITATION`, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(Type, Status)
status_fees <- violations %>%
select(`Year-Month`, Fees, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = Fees, values_fn = sum) %>%
arrange(Type, Status)
View(status_count)
View(status_fees)
?remove_empty
status_count <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
status_fees <- violations %>%
select(`Year-Month`, Fees, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = Fees, values_fn = sum) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
View(status_count)
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_count, "Status", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
library(janitor)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
data <- import("L:/BBMR_CSV_FILE_20230202.CSV")
colnames(data)
head(data)
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
##filter out data from previous FYs starting Feb 2023
filter(`VIOL DATE` >= "2022-07-01")
View(violations)
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
##filter out data from previous FYs starting Feb 2023
filter(`VIOL DATE` >= "2022-07-01") %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250,
`VIOL CODE` == 99 ~ 32,
`VIOL CODE` %in% c(2, 3) ~ 102),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description",
`VIOL CODE` == 2 ~ "No Stopping or No Parking Pimlico Event",
`VIOL CODE` == 3 ~ "Obstruct/Impeding Flow of Traffic",
`VIOL CODE` == 99 ~ "All Other Stopping or Parking Violations",
`VIOL CODE` == NA ~ "Unknown"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01")),
Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
View(violations)
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
status_count <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
status_fees <- violations %>%
select(`Year-Month`, Fees, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = Fees, values_fn = sum) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_count, "Status Count", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_fees, "Status Fees", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
##filter out data from previous FYs starting Feb 2023
filter(`VIOL DATE` >= "2022-07-01") %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250,
`VIOL CODE` == 99 ~ 32,
`VIOL CODE` %in% c(2, 3) ~ 102),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description",
`VIOL CODE` == 2 ~ "No Stopping or No Parking Pimlico Event",
`VIOL CODE` == 3 ~ "Obstruct/Impeding Flow of Traffic",
`VIOL CODE` == 99 ~ "All Other Stopping or Parking Violations",
`VIOL CODE` == NA ~ "Unknown",
TRUE ~ `VIOL CODE`),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01")),
Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
View(violations)
unique(violations$`VIOL CODE`)
data %>% filter(`VIOL CODE` == 39)
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
##filter out data from previous FYs starting Feb 2023
filter(`VIOL DATE` >= "2022-07-01") %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250,
`VIOL CODE` == 99 ~ 32,
`VIOL CODE` %in% c(2, 3) ~ 102),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description",
`VIOL CODE` == 39 ~ "Interstate 83",
`VIOL CODE` == 2 ~ "No Stopping or No Parking Pimlico Event",
`VIOL CODE` == 3 ~ "Obstruct/Impeding Flow of Traffic",
`VIOL CODE` == 99 ~ "All Other Stopping or Parking Violations",
`VIOL CODE` == NA ~ "Unknown"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01")),
Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
status_count <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
status_fees <- violations %>%
select(`Year-Month`, Fees, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = Fees, values_fn = sum) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_count, "Status Count", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_fees, "Status Fees", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
violations %>% filter(`VIOL CODE` == 33)
violations %>% filter(`VIOL CODE` == 34)
violations %>% filter(`VIOL CODE` == 35)
violations %>% filter(`VIOL CODE` == 36)
violations %>% filter(`VIOL CODE` == 37)
violations %>% filter(`VIOL CODE` == 38)
data %>% filter(`VIOL CODE` == 33)
data %>% filter(`VIOL CODE` == 34)
data %>% filter(`VIOL CODE` == 35)
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
##filter out data from previous FYs starting Feb 2023
filter(`VIOL DATE` >= "2022-07-01") %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250,
`VIOL CODE` == 99 ~ 32,
`VIOL CODE` %in% c(2, 3) ~ 102),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "Truck Overheight Warning Notice",
`VIOL CODE` == 37 ~ "Truck Overheight Second Violation",
`VIOL CODE` == 38 ~ "Truck Overheight Third or Subsequent Violation",
`VIOL CODE` == 39 ~ "Interstate 83",
`VIOL CODE` == 2 ~ "No Stopping or No Parking Pimlico Event",
`VIOL CODE` == 3 ~ "Obstruct/Impeding Flow of Traffic",
`VIOL CODE` == 99 ~ "All Other Stopping or Parking Violations",
`VIOL CODE` == NA ~ "Unknown"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01")),
Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
#this can take a while
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
status_count <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
status_fees <- violations %>%
select(`Year-Month`, Fees, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = Fees, values_fn = sum) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_count, "Status Count", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_fees, "Status Fees", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
library(janitor)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
colnames(data)
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
##filter out data from previous FYs starting Feb 2023
filter(`VIOL DATE` >= "2022-07-01") %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250,
`VIOL CODE` == 99 ~ 32,
`VIOL CODE` %in% c(2, 3) ~ 102),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "Truck Overheight Warning Notice",
`VIOL CODE` == 37 ~ "Truck Overheight Second Violation",
`VIOL CODE` == 38 ~ "Truck Overheight Third or Subsequent Violation",
`VIOL CODE` == 39 ~ "Interstate 83",
`VIOL CODE` == 2 ~ "No Stopping or No Parking Pimlico Event",
`VIOL CODE` == 3 ~ "Obstruct/Impeding Flow of Traffic",
`VIOL CODE` == 99 ~ "All Other Stopping or Parking Violations",
`VIOL CODE` == NA ~ "Unknown"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01")),
`PAID MONTH` = ymd(paste0(year(`PAID DATE`), "-", month(`PAID DATE`), "-01")),
Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`VIOL YEAR` = format(`VIOL DATE`, format = "%Y"),
`PAID YEAR` = format(`PAID DATE`, format = "%Y"))
View(violations)
violations <- violations %>% mutate(`Violation Year` = format(`VIOL DATE`, format = "%Y"),
`Violation Month` = format(`VIOL DATE`, format = "%m"),
`Violation Year-Month` = format(`VIOL DATE`, format = "%Y-%m"),
`Paid Year` = format(`PAID DATE`, format = "%Y"),
`Paid Month` = format(`PAID DATE`, format = "%m"),
`Paid Year-Month` = format(`PAID DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Violations Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Violations Year-Month`) %>%
pivot_wider(names_from = `Violations Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
issued <- violations %>%
select(`Violation Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Violation Year-Month`) %>%
pivot_wider(names_from = `Violation Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(issued)
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Paid Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Paid Year-Month`) %>%
pivot_wider(names_from = `Paid Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(paid)
View(violations)
unique(violations$Status)
test = violations %>% filter(is.na(`Paid Year-Month`) & Status = "Paid in full")
test = violations %>% filter(is.na(`Paid Year-Month`) & Status == "Paid in full")
View(test)
colnames(paid)
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Paid Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Paid Year-Month`) %>%
pivot_wider(names_from = `Paid Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
rename(`No Paid Date` = `NA`)
View(paid)
View(issued)
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250,
`VIOL CODE` == 99 ~ 32,
`VIOL CODE` %in% c(2, 3) ~ 102),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "Truck Overheight Warning Notice",
`VIOL CODE` == 37 ~ "Truck Overheight Second Violation",
`VIOL CODE` == 38 ~ "Truck Overheight Third or Subsequent Violation",
`VIOL CODE` == 39 ~ "Interstate 83",
`VIOL CODE` == 2 ~ "No Stopping or No Parking Pimlico Event",
`VIOL CODE` == 3 ~ "Obstruct/Impeding Flow of Traffic",
`VIOL CODE` == 99 ~ "All Other Stopping or Parking Violations",
`VIOL CODE` == NA ~ "Unknown"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01")),
`PAID MONTH` = ymd(paste0(year(`PAID DATE`), "-", month(`PAID DATE`), "-01")),
Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`VIOL YEAR` = format(`VIOL DATE`, format = "%Y"),
`PAID YEAR` = format(`PAID DATE`, format = "%Y"))
violations <- violations %>% mutate(`Violation Year` = format(`VIOL DATE`, format = "%Y"),
`Violation Month` = format(`VIOL DATE`, format = "%m"),
`Violation Year-Month` = format(`VIOL DATE`, format = "%Y-%m"),
`Paid Year` = format(`PAID DATE`, format = "%Y"),
`Paid Month` = format(`PAID DATE`, format = "%m"),
`Paid Year-Month` = format(`PAID DATE`, format = "%Y-%m"))
issued <- violations %>%
##filter out data from previous FYs starting Feb 2023
filter(`VIOL DATE` >= "2022-07-01") %>%
select(`Violation Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Violation Year-Month`) %>%
pivot_wider(names_from = `Violation Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(issued)
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Paid Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Paid Year-Month`) %>%
pivot_wider(names_from = `Paid Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
rename(`No Paid Date` = `NA`)
View(paid)
status_count <- violations %>%
filter(`VIOL DATE` >= "2022-07-01") %>%
select(`Year-Month`, `CITATION`, `Type`, Status) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
status_count <- violations %>%
filter(`VIOL DATE` >= "2022-07-01") %>%
select(`Violation Year-Month`, `CITATION`, `Type`, Status) %>%
arrange(`Violation Year-Month`) %>%
pivot_wider(names_from = `Violation Year-Month`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
View(status_count)
status_fees <- violations %>%
filter(`VIOL DATE` >= "2022-07-01") %>%
select(`Paid Year-Month`, Fees, `Type`, Status) %>%
arrange(`Paid Year-Month`) %>%
pivot_wider(names_from = `Paid Year-Month`, values_from = Fees, values_fn = sum) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
View(status_fees)
status_fees <- violations %>%
filter(`PAID DATE` >= "2022-07-01") %>%
select(`Paid Year-Month`, Fees, `Type`, Status) %>%
arrange(`Paid Year-Month`) %>%
pivot_wider(names_from = `Paid Year-Month`, values_from = Fees, values_fn = sum) %>%
arrange(Type, Status) %>%
remove_empty(which = "rows", quiet = FALSE)
View(status_fees)
unpaid <- violations %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, Year) %>%
filter(Status != "Paid in full" & Status != "Balance abated (paid)") %>%
arrange(TAG)
unpaid <- violations %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, `Violation Year`) %>%
filter(Status != "Paid in full" & Status != "Balance abated (paid)") %>%
arrange(TAG)
lost <- violations %>%
filter((Status != "Paid in full" & Status != "Balance abated (paid)")) %>%
select(CITATION, TAG, Type, `VIOL DATE`, Status, `Violation Year`) %>%
mutate(Year = as.numeric(`Violation Year`)) %>%
group_by(TAG) %>%
summarise(count = n(),
max = max(Year)) %>%
filter(max <= 2019) %>%
ungroup()
lost_tags <- lost$TAG
lost_rev <- lost %>% left_join(unpaid, by = c("TAG")) %>%
select(-count, -max) %>%
relocate(TAG, .after = CITATION) %>%
arrange(TAG)
unpaid <- unpaid %>%
filter(!(TAG %in% lost_tags))
tags <- violations %>%
select(TAG, Type, `Violation Year`, CITATION) %>%
group_by(TAG, Type, `Violation Year`) %>%
summarise(`# Violations` = n())
View(tags)
unique(violations$Type)
?pivot_wider
tags <- violations %>%
filter(Type %in% c("Speed Violation", "Interstate 83")) %>%
select(TAG, `Violation Year`, CITATION) %>%
arrange(`Violation Year`) %>%
pivot_wider(id_cols = TAG, names_from = `Violation Year`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(TAG) %>%
remove_empty(which = "rows", quiet = FALSE)
View(tags)
tags <- violations %>%
filter(Type %in% c("Speed Violation", "Interstate 83")) %>%
select(TAG, `Violation Year`, CITATION) %>%
arrange(`Violation Year`) %>%
pivot_wider(id_cols = TAG, names_from = `Violation Year`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(TAG) %>%
remove_empty(which = "rows", quiet = FALSE) %>%
filter(sum(`2017`, `2018`, `2019`, `2020`, `2021`, `2022`, `2023`) > 1)
tags <- violations %>%
filter(Type %in% c("Speed Violation", "Interstate 83")) %>%
select(TAG, `Violation Year`, CITATION) %>%
arrange(`Violation Year`) %>%
pivot_wider(id_cols = TAG, names_from = `Violation Year`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(TAG) %>%
remove_empty(which = "rows", quiet = FALSE) %>%
mutate(`Total Citations` = rowSums(c(`2017`, `2018`, `2019`, `2020`, `2021`, `2022`, `2023`)))
##repeat offenders by TAG
tags <- violations %>%
filter(Type %in% c("Speed Violation", "Interstate 83")) %>%
select(TAG, `Violation Year`, CITATION) %>%
arrange(`Violation Year`) %>%
pivot_wider(id_cols = TAG, names_from = `Violation Year`, values_from = CITATION, values_fn = list(CITATION = length)) %>%
arrange(TAG) %>%
remove_empty(which = "rows", quiet = FALSE) %>%
adorn_totals(where = "col", fill = 0, na.rm = TRUE, name = "Total Citations") %>%
filter(`Total Citations` > 1)
View(tags)
export_excel(issued, "Issued (Viol Date)", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid (Paid Date)", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_count, "Status # (Viol Date)", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(status_fees, "Status $ (Paid Date)", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(unpaid, "Unpaid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(lost_rev, "Lost Revenue", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
export_excel(tags, "Repeat Tags", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
