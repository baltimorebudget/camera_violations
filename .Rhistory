pivot_wider(names_from = Year-Month, values_from = "$$")
issued <- violations %>%
group_by(Year, Type, LOCATION) %>%
summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = Year-Month, values_from = "$$")
issued <- violations %>%
group_by(Year-Month, Type, LOCATION) %>%
summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = Year-Month, values_from = "$$")
issued <- violations %>%
select(`Year-Month`, `Type`, LOCATION)
# group_by(Year-Month, Type, LOCATION) %>%
# summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = Year-Month, values_from = "$$")
issued <- violations %>%
select(`Year-Month`, `Fees`, LOCATION)
# group_by(Year-Month, Type, LOCATION) %>%
# summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = `Year-Month`, values_from = Fees)
issued <- violations %>%
select(`Year-Month`, `Fees`, LOCATION) %>%
# group_by(Year-Month, Type, LOCATION) %>%
# summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = `Year-Month`, values_from = Fees)
issued <- violations %>%
select(`Year-Month`, `CITATION`, LOCATION) %>%
# group_by(Year-Month, Type, LOCATION) %>%
# summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION)
View(issued)
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
# group_by(Year-Month, Type, LOCATION) %>%
# summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = ~n(.x, na.rm = TRUE))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
# group_by(Year-Month, Type, LOCATION) %>%
# summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = ~n())
list(CITATION = length)
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
# group_by(Year-Month, Type, LOCATION) %>%
# summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(issued)
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
# group_by(Year-Month, Type, LOCATION) %>%
# summarise("$$" = sum(Fees), .groups = "drop_last") %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(issued)
export_excel(issued, "Cameras", "outputs/Camera Violations 2022-07-02.xlsx", "new")
max(violations$`VIOL DATE`)
unique(violations$`VIOL DATE`)
max(violations$`PAID DATE`)
unique(violations$`PAID DATE`)
head(violations$`PAID DATE`)
order(violations$`PAID DATE`)
violations %>% arrange(`PAID DATE`)
violations %>% arrange(`PAID DATE`) %>% top_n(10)
sorted <- data %>% arrange(`PAID DATE`)
head(sorted)
tail(sorted)
sorted <- violations %>% arrange(`PAID DATE`)
tail(sorted)
sorted <- violations %>% arrange(`Year-Month`)
tail(sorted)
violations %>% filter(`PAID DATE` > "20220531")
violations %>% filter(`PAID DATE` > 20220531)
violations %>% filter(`PAID DATE` > 20220501)
violations %>% filter(`PAID DATE` > 20220401)
violations %>% filter(`PAID DATE` > 20220101)
max(violations$`PAID DATE`)
violations %>% filter(!is.na(`PAID DATE`)) %>% max(`PAID DATE`)
test <- violations %>% filter(!is.na(`PAID DATE`))
max(test$`PAID DATE`)
max(test$`VIOL DATE`)
max(sorted$`VIOL DATE`)
test %>% filter(`PAID DATE` == "2022-06-01")
test %>% filter(`PAID DATE` > "2022-06-01")
violations %>% filter(`PAID DATE` > "2022-06-01")
violations %>% filter(`VIOL DATE` > "2022-06-01")
violations %>% filter(`VIOL DATE` > "2022-05-01")
paid <- violations %>%
filter(!is.na(`PAID DATE`)) %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
data %>% filter(startsWith(`VIOL DATE`, "202206"))
filter(data, startsWith(`VIOL DATE`, "202206"))
filter(data, `VIOL DATE` > 20220601)
filter(data, `VIOL DATE` > 20220701)
filter(data, `VIOL DATE` > 20220629)
filter(data, `VIOL DATE` > 20220615)
violations <- cameras %>%
mutate_at(vars(ends_with("DATE")), ymd)
View(violations)
data <- import("L:/BBMR_CSV_FILE_20220702.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd)
View(violations)
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
max(violations$`VIOL DATE`)
max(violations$`PAID DATE`)
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(issued)
paid <- violations %>%
filter(STATUS %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(paid)
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(paid)
export_excel(issued, "Issued", "outputs/Camera Violations 2022-07-02.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-07-02.xlsx", "existing")
#.libPaths("C:/Users/sara.brumfield2/Documents/r_library")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
data <- import("L:/BBMR_CSV_FILE_20220802.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(issued)
View(paid)
View(violations)
max(violations$`VIOL DATE`)
violations_FY22 <- violations %>% filter(`Year-Month` < "2022-07")
max(violations_FY22$`VIOL DATE`)
export_excel(issued, "Issued", "outputs/Camera Violations 2022-07-02.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-07-02.xlsx", "existing")
##====
tag <- violations %>%
count(STATUS, TAG, `VIOL CODE`, `VIOL MONTH`)
issued_fy22 <- violations_FY22 %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid_fy22 <- violations_FY22 %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
issued_fy22 <- violations_FY22 %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid_fy22 <- violations_FY22 %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
View(paid_fy22)
View(issued_fy22)
sum(paid$`2022-06`)
sum(paid$`2022-06`, na.rm = TRUE)
sum(paid_fy22$`2022-06`, na.rm = TRUE)
export_excel(issued_fy22, "Issued 06302022", "outputs/Camera Violations 2022-06-30.xlsx", "new")
export_excel(paid_fy22, "Paid 06302022", "outputs/Camera Violations 2022-06-30.xlsx", "existing")
export_excel(issued, "Issued", "outputs/Camera Violations 2022-08-02.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-08-02.xlsx", "existing")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
data <- import("L:/BBMR_CSV_FILE_20220902.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued, "Issued", "outputs/Camera Violations 2022-09-02.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-09-02.xlsx", "existing")
violations_FY22 <- violations %>% filter(`Year-Month` < "2022-07")
issued_fy22 <- violations_FY22 %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid_fy22 <- violations_FY22 %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued_fy22, "Issued 06302022", "outputs/Camera Violations 2022-06-30.xlsx", "new")
export_excel(paid_fy22, "Paid 06302022", "outputs/Camera Violations 2022-06-30.xlsx", "existing")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(dplyr)
library(lubridate)
library(rio)
library(readxl)
library(magrittr)
library(assertthat)
library(stringr)
library(openxlsx)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
source("G:/Analyst Folders/Sara Brumfield/exp_projection_year/projections/expProjections/R/1_apply_excel_formulas.R")
source("G:/Analyst Folders/Sara Brumfield/exp_projection_year/projections/expProjections/R/1_write_excel_formulas.R")
#.libPaths("C:/Users/sara.brumfield2/Documents/r_library")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
data <- import("L:/BBMR_CSV_FILE_20221004.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued, "Issued", "outputs/Camera Violations 2022-10-04.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-10-04.xlsx", "existing")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/bbmR")
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
rm(list = c("combine_agencies", "connect_fs_api", "create_analyst_dirs", "export_excel", "extract_fs_submissions", "get_fs_submissions", "get_fy", "get_last_mod", "match_name_to_id", "query_db", "rename_cols"))
data <- import("L:/BBMR_CSV_FILE_20221102.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued, "Issued", "outputs/Camera Violations 2022-10-04.xlsx", "new")
export_excel(paid, "Paid", "outputs/Camera Violations 2022-10-04.xlsx", "existing")
Sys.Date()
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
#.libPaths("C:/Users/sara.brumfield2/Documents/r_library")
# .libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
data <- import("L:/BBMR_CSV_FILE_20221202.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
issued <- violations %>%
select(`Year-Month`, `CITATION`, `Type`, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
paid <- violations %>%
filter(Status %in% c("Paid in full", "Balance abated (paid)")) %>%
select(`Year-Month`, `CITATION`, `Type`, Status, LOCATION) %>%
arrange(`Year-Month`) %>%
pivot_wider(names_from = `Year-Month`, values_from = CITATION, values_fn = list(CITATION = length))
export_excel(issued, "Issued", paste0("outputs/Camera Violations ", Sys.Date() ,".xlsx"), "new")
export_excel(paid, "Paid", paste0("outputs/Camera Violations ", Sys.Date(), ".xlsx"), "existing")
file_path = "G:/BBMR - Revenue Team/2. Revenue Accounts/A001 - General Fund/191-193 - Speed - Red-Light Violations"
.libPaths("C:/Users/sara.brumfield2/OneDrive - City Of Baltimore/Documents/r_library")
library(tidyverse)
library(lubridate)
library(rio)
devtools::load_all("G:/Analyst Folders/Sara Brumfield/_packages/bbmR")
data <- import("L:/BBMR_CSV_FILE_20221202.CSV")
violations <- data %>%
mutate_at(vars(ends_with("DATE")), ymd) %>%
mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
`VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
`VIOL CODE` == 36 ~ 0,
`VIOL CODE` == 37 ~ 125,
`VIOL CODE` == 38 ~ 250),
Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
`VIOL CODE` == 31 ~ "Right on Red",
`VIOL CODE` == 32 ~ "Speed Violation",
`VIOL CODE` == 33 ~ "No Description",
`VIOL CODE` == 34 ~ "No Description",
`VIOL CODE` == 35 ~ "No Description",
`VIOL CODE` == 36 ~ "No Description",
`VIOL CODE` == 37 ~ "No Description",
`VIOL CODE` == 38 ~ "No Description"),
`VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
mutate(Status = case_when(STATUS == "P" ~ "Paid in full",
STATUS == "O" ~ "Open",
(STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
(STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
STATUS == "H" ~ "Hold processing",
STATUS == "U" ~ "Uncollectable",
TRUE ~ STATUS),
`Year` = format(`VIOL DATE`, format = "%Y"))
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
`Month` = format(`VIOL DATE`, format = "%m"),
`Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))
tags <- violations %>%
filter(Status != "Paid in full" | Status != "Balance abated (paid)") %>%
group_by(TAG, Type, Year-Month) %>%
summarise(count = n(CITATION))
tags <- violations %>%
filter(Status != "Paid in full" | Status != "Balance abated (paid)") %>%
group_by(TAG, Type, `Year-Month`) %>%
summarise(count = n(CITATION))
unpaid <- violations %>%
filter(Status != "Paid in full" | Status != "Balance abated (paid)") %>%
select(TAG, Type, `VIOL DATE`, Status)
unique(unpaid$Status)
unpaid <- violations %>%
filter(Status != "Paid in full" & Status != "Balance abated (paid)") %>%
select(TAG, Type, `VIOL DATE`, Status)
unique(unpaid$Status)
unpaid <- violations %>%
filter(Status != "Paid in full" & Status != "Balance abated (paid)") %>%
select(TAG, Type, `VIOL DATE`, Status) %>%
arrange(TAG)
View(unpaid)
