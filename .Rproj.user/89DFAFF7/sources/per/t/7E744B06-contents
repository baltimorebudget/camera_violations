#.libPaths("C:/Users/sara.brumfield2/Documents/r_library")
.libPaths("C:/Users/sara.brumfield2/.conda/envs/bbmr/Lib/R/library")
library(tidyverse)
library(lubridate)

.libPaths("G:/Data/r_library")
library(bbmR)

#load("Data/Camera Violations 2022-05-03.Rdata")

#This is how you normally input data
library(rio)
data <- import("outputs/Camera Violations 2022-06-02.xlsx")

violations <- cameras %>%
  mutate_at(vars(ends_with("DATE")), ymd) %>% 
  mutate(Fees = case_when(`VIOL CODE` %in% c(30, 31) ~ 75,
                          `VIOL CODE` %in% c(32, 33, 34, 35) ~ 40,
                          `VIOL CODE` == 36 ~ 0,
                          `VIOL CODE` == 37 ~ 125,
                          `VIOL CODE` == 38 ~ 250),
         Type = case_when(`VIOL CODE` == 30 ~ "Red Light Violation",
                          `VIOL CODE` == 31 ~ "Right on Red",
                          `VIOL CODE` == 32 ~ "Speed Violation",
                          `VIOL CODE` == 33 ~ "No Description",
                          `VIOL CODE` == 34 ~ "No Description",
                          `VIOL CODE` == 35 ~ "No Description",
                          `VIOL CODE` == 36 ~ "No Description",
                          `VIOL CODE` == 37 ~ "No Description",
                          `VIOL CODE` == 38 ~ "No Description"),
         `VIOL MONTH` = ymd(paste0(year(`VIOL DATE`), "-", month(`VIOL DATE`), "-01"))) %>%
  mutate(Status = case_when(STATUS == "P" ~ "Paid in full", 
                            STATUS == "O" ~ "Open",
                            (STATUS == "A" & is.na(`PAID DATE`)) ~ "Balance abated (unpaid)",
                            (STATUS == "A" & !is.na(`PAID DATE`)) ~ "Balance abated (paid)",
                            STATUS == "H" ~ "Hold processing",
                            STATUS == "U" ~ "Uncollectable",
                            TRUE ~ STATUS),
         `Year` = format(`VIOL DATE`, format = "%Y"))
  

##check $$ against DOT ====
violation_fees <- violations %>% #pivot_longer(cols = "Year", names_to = "Status", values_to = "Fees")
  group_by(Year, Type, Status) %>% 
  summarise("$$" = sum(Fees), .groups = "drop_last") %>%
  pivot_wider(names_from = Year, values_from = "$$")

export_excel(violation_fees, "Fees by Status", "outputs/Camera Violations by Year and Status.xlsx", "new")

#2016 and 47/75 fees only======
violations <- violations %>% mutate(`Year` = format(`VIOL DATE`, format = "%Y"),
                                    `Month` = format(`VIOL DATE`, format = "%m"),
                                    `Year-Month` = format(`VIOL DATE`, format = "%Y-%m"))

filtered_paid <- filter(violations, `VIOL CODE` %in% c(30, 31, 32, 33, 34, 35) & `Year` > 2015) %>%
  mutate(`Pay Status` = case_when(!is.na(`PAID DATE`) == TRUE ~ "Paid",
                                  TRUE ~ "Issued"),
         `Paid Amount` = case_when(is.na(`PAID DATE`) == TRUE ~ 0,
                                   TRUE ~ `Fees`)) %>%
  group_by(`Year`, `Month`, `VIOL CODE`, `Type`, `Pay Status`) %>% 
  summarise(`Total Fees` = sum(`Paid Amount`, na.rm = TRUE),
            `Total Tickets` = n(), , .groups = 'drop')

filtered_paid <- filtered_paid %>%
  filter(`Pay Status` == "Paid")



filtered_issued <- filter(violations, `VIOL CODE` %in% c(30, 31, 32, 33, 34, 35) & `Year` > 2015) %>%
  mutate(`Pay Status` = case_when(!is.na(`PAID DATE`) == TRUE ~ "Paid",
                                  TRUE ~ "Issued"),
         `Paid Amount` = case_when(is.na(`PAID DATE`) == TRUE ~ 0,
                                   TRUE ~ `Fees`)) %>%
  group_by(`Year`, `Month`, `VIOL CODE`, `Type`) %>% 
  summarise(`Total Fees` = sum(`Paid Amount`, na.rm = TRUE),
            `Total Tickets` = n())

export_excel(filtered_paid, "Paid", "Camera Violations 40-75 Only 2022-05-03.xlsx", "new")
export_excel(filtered_issued, "Issued", "Camera Violations 40-75 Only 2022-05-03.xlsx", "existing")

##====
tag <- violations %>%
  count(STATUS, TAG, `VIOL CODE`, `VIOL MONTH`)

fy <- tag %>%
  mu

summary <- violations %>%
  count(LOCATION, `VIOL CODE`)

summary <- violations %>%
  group_by(LOCATION, `VIOL CODE`) %>%
  summarize(Fees = sum(Fees, na.rm = TRUE))


tag <- violations %>%
  count(TAG, LOCATION, Fees) %>%
  arrange(-n)

tag.summary <- violations %>%
  group_by(TAG) %>%
  summarize(Fees = sum(Fees, na.rm = TRUE))